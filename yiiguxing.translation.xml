<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="375" />
    <option name="newTranslationDialogWidth" value="603" />
    <option name="newTranslationDialogX" value="25" />
    <option name="newTranslationDialogY" value="-1054" />
    <histories>
      <item value="\brief Registers a handler for the specified method or event. A user application must call this method to register callbacks for for messages that match the specified service, instance, methodevent pattern. It is possible to specify wildcard values for all three identifiers arguments. Notes: - Only a single handler can be registered per service, instance, methodevent combination. - A subsequent call will overwrite an existing registration. - Handler registrations containing wildcards can be active in parallel to handler registrations for specific service, instance, methodevent combinations." />
      <item value="\brief Register a state handler with the vsomeip runtime. The state handler tells if this client is successfully [de]registered at the central vsomeip routing component. This is called during the @ref start and @ref stop methods of this class to inform the user application about the registration state. \param _handler Handler function to be called on state change." />
      <item value="\brief Fire an event to a specific client. The specified event is updated with the specified payload data. Dependent on the type of the event, the payload is distributed to all notified clients (always for events, only if the payload has changed for fields)." />
      <item value="The specified event is updated with the specified payload data. Dependent on the type of the event, the payload is distributed to all notified clients (always for events, only if the payload has changed for fields). Note: Prior to using this method, @ref offer_event has to be called by the service provider." />
      <item value="Unregister the application as user of an event or field and completely removes the eventfield if the application is the last existing user." />
      <item value="A user application should call this method if it does not request to use the service instance any longer. The method unregisters the request a the routing component, which removes the service instance from the list of requested service instances if the call releases the last existing request for the service instance. This is important for external service instances, as the SOMEIP Service Discovery can avoid to send unnecessary Find messages." />
      <item value="The user application must call this method for each service it offers to register it at the vsomeip routing component, which makes the service visible to interested clients. Dependent on the configuration the service is available internally only or internally and externally. To offer a service to the external network, the configuration must contain a port for the offered service instance. If no such port configuration is provided, the service is not visible outside the device." />
      <item value="\brief Starts message processing. This method must be called after init to start message processing. It will block until the message processing is terminated using the @ref stop method or by receiving signals. It processes messages received via the sockets and uses registered callbacks to pass them to the user application." />
      <item value="\brief Initializes the application. The init method must be called first after creating a vsomeip application and executes the following steps to initialize it: - Loading the configuration from a dynamic module - Loading the configuration from a .json file or - Loading the configuration from compiled data (not yet available) - Determining routing configuration and initialization of the routing itself - Installing signal handlers" />
      <item value="\brief Returns the client identifier that was assigned to the application object. Each request sent by and each response sent to the application contain the client identifier as part of the request identifier within the SOMEIP message header. The client identifier can either be configured by the configured as part of the application node within a vsomeip configuration file or is automatically set to an unused client identifier by vsomeip. If the client identifier is automatically set, its high byte will always match the diagnosis address of the device. \return Client ID of application" />
      <item value="rvi" />
      <item value="re" />
      <item value="h request sent by and eac" />
      <item value="Each request sent by and e" />
      <item value="se sent to the application contain the client identif" />
      <item value="Each request sent by and each response sent to the application contain the client identifier as part of the request identifier within the SOMEIP message" />
      <item value="Each request sent by and each response sent to the application contain the client identifier as part of the request identifier within the SOMEIP message header. The client identifier can either be configured by the configured as part of the application node within a vsomeip configuration file or is automatically set to an unused client identifier by vsomeip. If the client identifier is automatically set, its high byte will always match the diagnosis address of the device. \return Client ID of application" />
      <item value="subsequent" />
    </histories>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1671594921101" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20160801000026096" />
      </app-key>
    </option>
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="3f4aa87832ca9d08" />
      </youdao-translate>
    </option>
  </component>
</application>